



Internet Engineering Task Force                                  N. Kuhn
Internet-Draft                                                      CNES
Intended status: Informational                                E. Stephan
Expires: October 3, 2021                                          Orange
                                                            G. Fairhurst
                                                                T. Jones
                                                  University of Aberdeen
                                                           April 1, 2021


               Transport parameters for 0-RTT connections
                      draft-kuhn-quic-0rtt-bdp-09

Abstract

   0-RTT mechanisms reduce the time it takes for the first bytes of
   application data to be processed in a transport connection and can
   greatly reduce connection latency during setup.  The 0-RTT transport
   features described by quic-transport help clients establish secure
   connections with a minimal number of round-trips.

   This document describes a generic method to exchange path parameters
   relating to transport.  The additional transport parameters can help
   a connection that continues after an interruption or restarts by
   sharing connection properties.  This can help servers to adapt to
   non-default path characteristics and to short-cut slow RTT-based
   processes.  This document discusses safety guidelines that should be
   considered when using these parameters for increasing egress traffic.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on October 3, 2021.






Kuhn, et al.             Expires October 3, 2021                [Page 1]

Internet-Draft             Transport for 0-RTT                April 2021


Copyright Notice

   Copyright (c) 2021 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Safe jump start . . . . . . . . . . . . . . . . . . . . . . .   4
     2.1.  Rationale behind the safety guidelines  . . . . . . . . .   4
     2.2.  Safety guidelines . . . . . . . . . . . . . . . . . . . .   4
   3.  Implementation considerations . . . . . . . . . . . . . . . .   5
     3.1.  BDP metadata parameters . . . . . . . . . . . . . . . . .   5
     3.2.  Extension activation  . . . . . . . . . . . . . . . . . .   5
     3.3.  Implementation solutions  . . . . . . . . . . . . . . . .   6
   4.  Discussion  . . . . . . . . . . . . . . . . . . . . . . . . .   6
     4.1.  Applicability of the BDP extension  . . . . . . . . . . .   6
     4.2.  BDP extension protected as much as initial_max_data . . .   7
     4.3.  The client point-of-view  . . . . . . . . . . . . . . . .   7
     4.4.  Other use-cases . . . . . . . . . . . . . . . . . . . . .   7
       4.4.1.  Optimizing client's requests  . . . . . . . . . . . .   7
       4.4.2.  Sharing transport information accross multiple
               connections . . . . . . . . . . . . . . . . . . . . .   7
   5.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .   7
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   8
   8.  Informative References  . . . . . . . . . . . . . . . . . . .   8
   Appendix A.  Example of server solution . . . . . . . . . . . . .   9
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  10

1.  Introduction

   Each transport connection typically starts without knowledge of the
   path between the endpoints.  Transport protocols use implicit signals
   from the network to discover the properties of the path.  This
   information is used to adapt the transport mechanisms to the network
   path.  For example, an Internet transport endpoint is unable to
   determine a safe rate at which to start or continue their



Kuhn, et al.             Expires October 3, 2021                [Page 2]

Internet-Draft             Transport for 0-RTT                April 2021


   transmission, and uses slow-start to determine a safe rate.  This
   applies to the 1-RTT mode of QUIC.

   This document aims to improve traffic delivery by allowing the
   connection to short-cut slow RTT-based processes that grow connection
   parameters.  This can result in significant web browsing experience
   improvement and short file downloading time reduction.

   This document proposes an extension to the transport parameters that
   are shared during the 1-RTT phase.  This allows resumption using
   additionnal transport and connection properties that were discovered
   in previous connections during the 0-RTT phase.  Candidate parameters
   are Round-Trip Time (RTT) and network Bottleneck Bandwidth (BB).

   Network conditions may vary between 1-RTT and 0-RTT connections.
   [RFC6349] defines the BDP as follows: "Derived from Round-Trip Time
   (RTT) and network Bottleneck Bandwidth (BB), the Bandwidth-Delay
   Product (BDP) determines the Send and Received Socket buffer sizes
   required to achieve the maximum TCP Throughput.  The 1-RTT connection
   may not reproduce the procedure detailed in [RFC6349] to measure the
   BDP.  The server may exploit internal evaluations of the bytes in
   flight and minimum RTT to assess the BDP.  As a result, the
   estimation of the BDP of the server would include the buffering in
   the network and would not be accurate.  Moreover, network conditions
   may vary between 1-RTT and 0-RTT connections.

   Section 7.3.1 of [I-D.ietf-quic-transport] describes the parameters
   that must be remembered if a client wishes to send 0-RTT data.  Both
   endpoints store the value of the server transport parameters from a
   previous connection and apply them to any 0-RTT packets that are sent
   in subsequent connections to the same peer.  Of the six mandatory
   parameters, only initial_max_data improves the time-to-service of the
   0-RTT connection.  The BDP metadata extension augments the list of
   server transport parameters that are shared with the client to
   improve the time-to-service and save resources such as CPU, memory
   and power.

   This document proposes :

   o  QUIC transport parameters to exchange the measured BDP in the
      1-RTT connection for 0-RTT connections;

   o  A simple test to verify whether the previous conditions apply;

   o  Implementation considerations for QUIC.






Kuhn, et al.             Expires October 3, 2021                [Page 3]

Internet-Draft             Transport for 0-RTT                April 2021


2.  Safe jump start

2.1.  Rationale behind the safety guidelines

   The server should carefully exploit internal evaluations of the bytes
   in flight and minimum RTT to assess the BDP.  Previously measured BDP
   should not be used as-is to avoid congestion collapse:

   o  The bytes in flight parameter that could be recalled from previous
      connection may be higher than the number of bytes in the BDP such
      as defined in [RFC6349] since it may include bytes in buffers
      along the path.

   o  Network conditions may vary between 1-RTT and 0-RTT connections.

   While safety recommandations are necessary, it seems important to
   note that CDNs currently exploit a very high Initial Window [TMA18].

2.2.  Safety guidelines

   If the client accepts the extension, the server could increase the
   initial congestion window.  The proposed mechanisms SHOULD be limited
   by any rate-limitation mechanisms of QUIC, such as flow control
   mechanisms or amplification attacks prevention.  In particular, the
   maximum number of packets that can be sent without acknowledgment
   needs to be chosen to avoid the creation and the increase of
   congestion to a congested network.  Moreover, the extension should
   not be an opportunity for the current connection to be a vector of an
   amplification attack.  The address validation process, used to
   prevent amplification attacks, SHOULD be considered
   [I-D.ietf-quic-transport].

   The following scenario is considered:

   1.  First connection without 0-RTT: the server stores parameters
       related to round-trip time and maximum data rate in the
       Bandwidth-Delay Product (BDP) extension frame;

   2.  During the first connection: the server sends the BDP extensions
       frame to the client - both client and server can read the content
       of the BDP extension;

   3.  Second connection with 0-RTT: if the client agrees with the
       parameters, it sends the BDP extension along with 0-RTT packets;

   4.  Second connection with 0-RTT: the servers sends a standard
       initial window - this can be considered a safe starting poing for




Kuhn, et al.             Expires October 3, 2021                [Page 4]

Internet-Draft             Transport for 0-RTT                April 2021


       an unknown path to avoid adding congestion to a congested
       network;

   5.  Second connection with 0-RTT: if the reception of IW is confirmed
       for the first RTT of data, and also the path is determined to be
       similar to that of a recent previous session (e.g., similar RTT),
       the method permits the sender to use the previous path
       information as an input to help determine a new safe rate;

   6.  Another safety net could be the pacing of packets as a function
       of the estimated RTT.

   This follows the idea of [RFC4782],
   [I-D.irtf-iccrg-sallantin-initial-spreading] and [CONEXT15].

3.  Implementation considerations

3.1.  BDP metadata parameters

   The BDP extension proposes two new parameters

   o  recon_bytes_in_flight (0x000X): The bytes in flight measured on
      the previous connection by the server.  Integer number of bytes.
      Using the previous values of bytes_in_flight defined in
      [I-D.ietf-quic-recovery], recon_bytes_in_flight could be
      determined.

   o  recon_min_rtt (0x000X): The minimum RTT measured on the previous
      connection by the server.  Integer number of milliseconds.  Using
      the min_rtt defined in [I-D.ietf-quic-recovery], recon_min_rtt can
      be set to min_rtt.  The min_rtt parameter may not track a
      decreasing RTT: the min_rtt that is reported here may not be the
      actual minimum RTT measured during the 1-RTT connection, but still
      reflects the characteristics of the latency on the network.

3.2.  Extension activation

   The BDP extension is protected by the same mechanism that protects
   the exchange of the 0-RTT transport parameters.  A client that
   activates 0-RTT data sends back the transport parameters received
   from the server during the previous connection (see Section 7.3.1 of
   [I-D.ietf-quic-transport]).

   The client reads the parameters in the BDP metadata extension, but
   can not change them.

   Accept: A client MAY use the extension parameters.  Then, it
   activates ingress optimization and sends back the transport



Kuhn, et al.             Expires October 3, 2021                [Page 5]

Internet-Draft             Transport for 0-RTT                April 2021


   parameters of the BDP metadata extension that it received from the
   server during the previous connection.

   Refuse: A client could choose not to use these parameters.  Then, it
   does not support ingress optimisation and drops the extension signal.
   A client that disagrees with the extension parameters received from
   the server refuses the optimization.

3.3.  Implementation solutions

   NEW_TOKEN

   BDP_TOKEN

   Transport parameters

   Session Ticket

4.  Discussion

4.1.  Applicability of the BDP extension

   This section discusses that applicability of the BDP extension.

   The following events could make the BDP extension inappropriate:

   o  IP address changes: If the client changes its IP address, it may
      employ a different network to reconnect.  The new path may not
      exhibit the same characteristics as the old one.

   o  Rate-limitation induced by QUIC: The proposed mechanisms SHOULD be
      limited by other rate-limitation mechanisms of QUIC, such as the
      address validation process that is used to prevent amplification
      attacks [I-D.ietf-quic-transport].

   o  Lifetime of the extension: Based on experimental feedback and to
      reduce resource utilization at the client, the BDP extension may
      be proposed with a lifetime that could be changed.  This follows
      the idea of NewSessionTicket of TLS [RFC8446].

   That being said, exploiting the safety nets proposed in Section 2.2
   would reduce any harm that could be caused by using inappropriate BDP
   parameters.  The safety guidelines reduce the gains brought by the
   proposed approach, but limit the risks of adding congestion in a
   congested network.






Kuhn, et al.             Expires October 3, 2021                [Page 6]

Internet-Draft             Transport for 0-RTT                April 2021


4.2.  BDP extension protected as much as initial_max_data

   The BDP metadata parameters are measured by the server during a
   previous connection.  The BDP extension is protected by the mechanism
   that protects the exchange of the 0-RTT transport parameters.  For
   the version 1 of QUIC, the BDP extension is protected using the
   mechanism that already protects the "initial_max_data" parameter.
   This is defined in sections 4.5 to 4.7 of [I-D.ietf-quic-tls].  It
   provides the server with a way to check the parameters proposed by
   the client are those that the server sent to the client during the
   previous connection.

4.3.  The client point-of-view

   The client can read the values of the extension.  The client may want
   to reject the extension, to accept and adapt the resource and flow
   control parameters or adapt requests.  The client cannot change the
   values of the extension.

4.4.  Other use-cases

4.4.1.  Optimizing client's requests

   In cases with Dynamic Adaptive Streaming over HTTPS (DASH), clients
   may encounter issues in knowing the available bandwidth or DASH can
   encounter issues in reaching the best available video playback
   quality.  The client's requests could be adapted and specific traffic
   could use information from the paths characteristics (such as trying
   to impress the client with high quality videos, to fill the buffers
   and avoid video blocking or to send high quality adds).

   In other cases, applications may provide additionnal services if
   clients can know the server's estimation of the path characteristics.

4.4.2.  Sharing transport information accross multiple connections

   There is an interest in sharing transport information across multiple
   connections.  [I-D.ietf-tcpm-2140bis] considers the sharing of
   transport parameters between connections originating from the same
   host.  The proposal in this document have the advantage of storing
   the information at the client and not requiring the server to retain
   additional state for each client.

5.  Acknowledgments

   The authors would like to thank Gabriel Montenegro, Patrick McManus,
   Ian Swett, Igor Lubashev, Christian Huitema, Robin Marx and Roland




Kuhn, et al.             Expires October 3, 2021                [Page 7]

Internet-Draft             Transport for 0-RTT                April 2021


   Bless for their fruitful comments on earlier versions of this
   document.

6.  IANA Considerations

   TBD: Text is required to register the extension BDP_metadata field.
   Parameters are registered using the procedure defined in
   [I-D.ietf-quic-transport].

7.  Security Considerations

   The BDP metadata parameters are measured by the server during a
   previous connection.

   The BDP extension is protected by the mechanism that protects the
   exchange of the 0-RTT transport parameters.  For the version 1 of
   QUIC, the BDP extension is protected using the mechanism that already
   protects the "initial_max_data" parameter.  This is defined in
   sections 4.5 to 4.7 of [I-D.ietf-quic-tls].  It provides the server
   with a way to check the parameters proposed by the client are those
   that the server sent to the client during the previous connexion.

8.  Informative References

   [CONEXT15]
              Li, Q., Dong, M., and P. Godfrey, "Halfback: Running Short
              Flows Quickly and Safely", ACM CoNEXT , 2015.

   [I-D.cardwell-iccrg-bbr-congestion-control]
              Cardwell, N., Cheng, Y., Yeganeh, S., and V. Jacobson,
              "BBR Congestion Control", draft-cardwell-iccrg-bbr-
              congestion-control-00 (work in progress), July 2017.

   [I-D.ietf-quic-recovery]
              Iyengar, J. and I. Swett, "QUIC Loss Detection and
              Congestion Control", draft-ietf-quic-recovery-34 (work in
              progress), January 2021.

   [I-D.ietf-quic-tls]
              Thomson, M. and S. Turner, "Using TLS to Secure QUIC",
              draft-ietf-quic-tls-34 (work in progress), January 2021.

   [I-D.ietf-quic-transport]
              Iyengar, J. and M. Thomson, "QUIC: A UDP-Based Multiplexed
              and Secure Transport", draft-ietf-quic-transport-34 (work
              in progress), January 2021.





Kuhn, et al.             Expires October 3, 2021                [Page 8]

Internet-Draft             Transport for 0-RTT                April 2021


   [I-D.ietf-tcpm-2140bis]
              Touch, J., Welzl, M., and S. Islam, "TCP Control Block
              Interdependence", draft-ietf-tcpm-2140bis-07 (work in
              progress), December 2020.

   [I-D.irtf-iccrg-sallantin-initial-spreading]
              Sallantin, R., Baudoin, C., Arnal, F., Dubois, E., Chaput,
              E., and A. Beylot, "Safe increase of the TCP's Initial
              Window Using Initial Spreading", draft-irtf-iccrg-
              sallantin-initial-spreading-00 (work in progress), January
              2014.

   [RFC2914]  Floyd, S., "Congestion Control Principles", BCP 41,
              RFC 2914, DOI 10.17487/RFC2914, September 2000,
              <https://www.rfc-editor.org/info/rfc2914>.

   [RFC4782]  Floyd, S., Allman, M., Jain, A., and P. Sarolahti, "Quick-
              Start for TCP and IP", RFC 4782, DOI 10.17487/RFC4782,
              January 2007, <https://www.rfc-editor.org/info/rfc4782>.

   [RFC6349]  Constantine, B., Forget, G., Geib, R., and R. Schrage,
              "Framework for TCP Throughput Testing", RFC 6349,
              DOI 10.17487/RFC6349, August 2011,
              <https://www.rfc-editor.org/info/rfc6349>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

   [TMA18]    Ruth, J. and O. Hohlfeld, "Demystifying TCP Initial Window
              Configurations of Content Distribution Networks", 2018
              Network Traffic Measurement and Analysis Conference
              (TMA) , 2018.

Appendix A.  Example of server solution

   This section details a solution at the server to safely increase the
   maximum amount of packets that the server sends when receiving a
   0-RTT packet from a client.

   The initial window is considered a safe starting point for an unknown
   path to avoid adding congestion to a congested network.  The general
   assumption is that a path does not currently suffer persistent
   congestion, and therefore the initial window is applicable until
   feedback about the path is received.  The resulting initial sending
   rate is only tentative until the capacity is confirmed to be
   available.  If there is loss within this initial transmission, then




Kuhn, et al.             Expires October 3, 2021                [Page 9]

Internet-Draft             Transport for 0-RTT                April 2021


   this could be evidence that the path is congested, and the sender
   needs to adjust to this congestion.

   Significant loss could be an indication of congestion collapse - i.e.
   persistent loss, requiring back-off of the sending rate.

   If however, the reception of IW is confirmed for the first RTT of
   data, and also the path is determined to be similar to that of a
   recent previous session (e.g., similar RTT), the method permits the
   sender to use the previous path information as an input to help
   determine a new safe rate.  One possibility is to immediately jump to
   a new sending rate that is derived from the previously sustained
   rate.  This follows the ideas of
   [I-D.cardwell-iccrg-bbr-congestion-control] and [RFC4782].

   The QoS mechanisms that are deployed in the networks can help in
   prevent the congestion collapse from occurring.  However, the sender
   must provide a significant reduction if there is evidence of
   potential congestion collapse [RFC2914] from his point of view.
   Precautions can be taken to guarantee that it is reasonably safe to
   jump to a high sending rate : measuring that network conditions did
   not change, allowing some space for other flows that have started and
   pace transmission of packets.  The sender might need to rapidly
   reduce its rate, if the higher sending rate does not prove to be
   supported.  It if is supported, the sender can resume standard
   congestion control.

Authors' Addresses

   Nicolas Kuhn
   CNES

   Email: nicolas.kuhn@cnes.fr


   Emile Stephan
   Orange

   Email: emile.stephan@orange.com


   Gorry Fairhurst
   University of Aberdeen

   Email: gorry@erg.abdn.ac.uk






Kuhn, et al.             Expires October 3, 2021               [Page 10]

Internet-Draft             Transport for 0-RTT                April 2021


   Tom Jones
   University of Aberdeen

   Email: tom@erg.abdn.ac.uk















































Kuhn, et al.             Expires October 3, 2021               [Page 11]
