



Internet Engineering Task Force                                  N. Kuhn
Internet-Draft                                                      CNES
Intended status: Informational                                E. Stephan
Expires: October 25, 2021                                         Orange
                                                            G. Fairhurst
                                                                T. Jones
                                                  University of Aberdeen
                                                          April 23, 2021


               Transport parameters for 0-RTT connections
                      draft-kuhn-quic-0rtt-bdp-09

Abstract

   QUIC 0-RTT transport features currently focuses on egress traffic
   optimization.  This draft proposes a QUIC extension that improves the
   performance of ingress traffic.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on October 25, 2021.

Copyright Notice

   Copyright (c) 2021 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of



Kuhn, et al.            Expires October 25, 2021                [Page 1]

Internet-Draft             Transport for 0-RTT                April 2021


   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Notations and terms . . . . . . . . . . . . . . . . . . .   2
     1.2.  Requirements Language . . . . . . . . . . . . . . . . . .   3
   2.  Motivation  . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Scope and structure of the document . . . . . . . . . . . . .   3
   4.  Implementation considerations . . . . . . . . . . . . . . . .   4
     4.1.  Rationale behind the choice of a BDP frame  . . . . . . .   4
     4.2.  BDP Frame . . . . . . . . . . . . . . . . . . . . . . . .   5
     4.3.  Extension activation  . . . . . . . . . . . . . . . . . .   6
     4.4.  Authenticity and validity of the BDP extension  . . . . .   6
   5.  Safe jump start and usage of the BDP frame for 0-RTT
       connections . . . . . . . . . . . . . . . . . . . . . . . . .   7
     5.1.  Rationale behind the safety guidelines  . . . . . . . . .   7
     5.2.  Safety guidelines . . . . . . . . . . . . . . . . . . . .   7
   6.  Discussion  . . . . . . . . . . . . . . . . . . . . . . . . .   9
     6.1.  BDP extension protected as much as initial_max_data . . .   9
     6.2.  The client point-of-view  . . . . . . . . . . . . . . . .   9
     6.3.  Other use-cases . . . . . . . . . . . . . . . . . . . . .   9
       6.3.1.  Optimizing client's requests  . . . . . . . . . . . .   9
       6.3.2.  Sharing transport information across multiple
               connections . . . . . . . . . . . . . . . . . . . . .   9
   7.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  10
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10
   9.  Security Considerations . . . . . . . . . . . . . . . . . . .  10
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     10.1.  Normative References . . . . . . . . . . . . . . . . . .  10
     10.2.  Informative References . . . . . . . . . . . . . . . . .  11
   Appendix A.  Example  . . . . . . . . . . . . . . . . . . . . . .  11
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  11

1.  Introduction

   QUIC 0-RTT transport features currently focuses on egress traffic
   optimization.  This draft proposes a QUIC extension to improve the
   performance of ingress traffic.

1.1.  Notations and terms

   [RFC6349] defines the BDP as follows: "Derived from Round-Trip Time
   (RTT) and network Bottleneck Bandwidth (BB), the Bandwidth-Delay
   Product (BDP) determines the Send and Received Socket buffer sizes
   required to achieve the maximum TCP Throughput."  The 1-RTT
   connection may not reproduce the procedure detailed in [RFC6349] to



Kuhn, et al.            Expires October 25, 2021                [Page 2]

Internet-Draft             Transport for 0-RTT                April 2021


   measure the BDP.  The server may exploit internal evaluations of the
   bytes in flight and minimum RTT to assess the BDP.  This draft
   considers the BDP as the Bandwidth-Delay Product as estimated by the
   server and would include the buffering in the network.

1.2.  Requirements Language

   The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119][RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.  Motivation

   This document improves traffic delivery by allowing the connection to
   short-cut slow RTT-based processes that grow connection parameters
   for QUIC 0-RTT connections.

   Section 7.3.1 of [I-D.ietf-quic-transport] describes the parameters
   that must be remembered if a client wishes to send 0-RTT data.  Both
   endpoints store the value of the server transport parameters from a
   previous connection and apply them to any 0-RTT packets that are sent
   in subsequent connections to the same peer.  Of the six mandatory
   parameters, only initial_max_data improves the time-to-service of the
   0-RTT connection.

   In addition to these parameters, this document proposes a QUIC
   extension to augment the list of server transport parameters that are
   shared with the client to improve the time-to-service.  This allows
   resumption using additional transport and connection properties that
   were discovered in previous connections during the 0-RTT phase.
   Candidate parameters are Round-Trip Time (RTT) and network Bottleneck
   Bandwidth (BB).  Network conditions may change during 1-RTT and
   0-RTT: this document proposes safety guidelines on how to safely
   apply to previously measured parameters to 0-RTT connections.

3.  Scope and structure of the document

   The following scenario is considered through the whole document:

   1.  Sharing 1-RTT transport parameters for 0-RTT connections :
       Section 4 discusses ways of implementing this in QUIC.
       Interoperability is required for this transport parameter
       exchange.

   2.  Safely using previously measured transport parameters in 0-RTT
       connections: Section 5 discusses solutions that can enable a safe



Kuhn, et al.            Expires October 25, 2021                [Page 3]

Internet-Draft             Transport for 0-RTT                April 2021


       increase of the transmission rate.  These safety nets SHOULD be
       implemented when the transport parameters are used to increase
       the ingress initial transmission rate.

   The following design can result in the exploitation of the solution
   proposed in Section 4 and Section 5:

   o  Sharing 1-RTT transport parameters for 0-RTT connections:

      1.  1-RTT connection without 0-RTT: the server stores parameters
          related to round-trip time and maximum data rate;

      2.  During the 1-RTT connection: the server sends the BDP
          extension frames (containing round-trip time and maximum data-
          rate) to the client;

      3.  0-RTT connection: if the client agrees with the parameters of
          the BDP extension, it sends the BDP extension along with 0-RTT
          CHO packets;

      4.  0-RTT connection: the server checks the authenticity and
          validity of the received BDP extension and run address
          validation for future connection described in Section 8.1.3 of
          [I-D.ietf-quic-transport].

   o  Safely using previously measured transport parameters in 0-RTT
      connections:

      1.  0-RTT connection: the server sends the first data packet using
          a standard initial window;

      2.  0-RTT connection: if the reception of IW is exhibits
          characteristics similar to that of a recent previous session
          from the client (i.e., similar RTT), the method permits the
          sender to use the previous path information as an input to
          help determine a new safe rate;

      3.  Pacing of packets as a function of the estimated RTT could
          provide additional safety.

4.  Implementation considerations

4.1.  Rationale behind the choice of a BDP frame

   The client can read the values of the extension which constraints the
   implementation possibilities.





Kuhn, et al.            Expires October 25, 2021                [Page 4]

Internet-Draft             Transport for 0-RTT                April 2021


   o  Using NewSessionTickets messages of TLS: a solution could have
      been to add a 'bdp_metada' field in the NewSessionTickets that the
      client could read.  The sole extension currently defined in TLS1.3
      that can be seen by the client is max_early_data_size (see section
      4.6.1 of [RFC8446]).  However, in the general design of QUIC, TLS
      sessions are managed by the TLS stacks.

   o  Using NEW_TOKEN frames: a solution could have been to send a token
      to the client through a NEW_TOKEN frame.  The token is an opaque
      blob and the client can not read its content (see section 19.7 of
      [I-D.ietf-quic-transport]).

   The draft proposes the exploitation of a new frame, BDP frame.  The
   BDP frame MUST be contained in 0-RTT packets if sent by the client.
   The BDP frame MUST be contained in 1-RTT packets if sent by the
   server.  The BDP frame MUST be considered in the congestion control
   and its data may not be limited by flow control limits.  The server
   MAY send multiple BDP frames in both 1-RTT and 0-RTT connections.
   The client MUST NOT send BDP frames during 1-RTT connections.

4.2.  BDP Frame

   The BDP frames are formatted as shown in Figure 1.

   BDP Frame {
     Type (i) = 0xXXX,
     Lifetime (i),
     Reconnection Bytes In Flight (i),
     Reconnection Minimum RTT (i),
   }

                        Figure 1: BDP Frame Format

   The BDP frames contain the following fields:

   o  Lifetime (extension_lifetime): The extension_lifetime is a value
      in milliseconds that is encoded as a variable length integer.
      This follows the idea of NewSessionTicket of TLS [RFC8446].  This
      represents the validity in time of the extension.

   o  Reconnection Bytes in Flight (recon_bytes_in_flight): The
      recon_bytes_in_flight is a value in bytes that is encoded as a
      variable length integer.  The bytes in flight measured on the
      previous connection by the server.  Using the previous values of
      bytes_in_flight defined in [I-D.ietf-quic-recovery],
      recon_bytes_in_flight could be determined.





Kuhn, et al.            Expires October 25, 2021                [Page 5]

Internet-Draft             Transport for 0-RTT                April 2021


   o  Reconnection Minimum RTT (recon_min_rtt): The recon_min_rtt is a
      value in milliseconds that is encoded as a variable length
      integer.  Using the min_rtt defined in [I-D.ietf-quic-recovery],
      recon_min_rtt can be set to min_rtt.  The min_rtt parameter may
      not track a decreasing RTT: the min_rtt that is reported here may
      not be the actual minimum RTT measured during the 1-RTT
      connection, but still reflects the characteristics of the latency
      on the network.

4.3.  Extension activation

   The client can accept the transmission of BDP frames from the server
   by using the following enable_bdp transport extension.

   enable_bdp (0xTBD): in the 1-RTT connection, the client indicates to
   the server that it wishes to receive BDP extension frames for
   improving ingress of 0-RTT connection.  Default value is 0.  Values
   strictly above 3 are invalid, and receipt of these values MUST be
   treated as a connection error of type TRANSPORT_PARAMETER_ERROR.

   o  0: Default value.  If the client does not send this parameter, the
      server considers that the client does not support or does not wish
      to activate the BDP extension.

   o  1: The client indicates to the server that it wishes to receive
      BDP frame and activates the ingress optimization for the 0-RTT
      connection.

   o  2: The client indicates that it does not wish to receive BDP
      frames but activates ingress optimization.

   o  3: The client indicates that it wishes to receive BDP frames but
      does not activate ingress optimization.

   This Transport Parameter is encoded as per Section 18 of
   [I-D.ietf-quic-transport].

4.4.  Authenticity and validity of the BDP extension

   The server MUST check the authenticity and validity of the received
   BDP extension.

   The following events could make use of the BDP extension
   inappropriate:

   o  IP address changes: If the client changes its IP address, it may
      employ a different network to reconnect.  The new path may not
      exhibit the same characteristics as the old one.



Kuhn, et al.            Expires October 25, 2021                [Page 6]

Internet-Draft             Transport for 0-RTT                April 2021


   o  Rate-limitation induced by QUIC: The proposed mechanisms SHOULD be
      limited by other rate-limitation mechanisms of QUIC, such as the
      address validation process that is used to prevent amplification
      attacks [I-D.ietf-quic-transport].

   o  Lifetime of the extension: Based on experimental feedback and to
      reduce resource utilization at the client, the server can tune the
      extension_lifetime parameter.  Clients MUST NOT send a BDP frame
      if the timer has expired.  This follows the idea of
      NewSessionTicket of TLS [RFC8446].

5.  Safe jump start and usage of the BDP frame for 0-RTT connections

5.1.  Rationale behind the safety guidelines

   The server should carefully exploit internal evaluations of the bytes
   in flight and minimum RTT to assess the BDP.  Previously measured BDP
   should not be used as-is to avoid congestion collapse:

   o  The bytes in flight parameter that could be recalled from previous
      connection may be higher than the number of bytes in the BDP such
      as defined in [RFC6349] since it may include bytes in buffers
      along the path.

   o  Network conditions may vary between 1-RTT and 0-RTT connections.

   While safety recommendations are necessary, it seems important to
   note that CDNs currently exploit a very high Initial Window [TMA18].

5.2.  Safety guidelines

   If the client accepts the extension, the server could increase the
   initial congestion window.  The proposed mechanisms SHOULD be limited
   by any rate-limitation mechanisms of QUIC, such as flow control
   mechanisms or amplification attacks prevention.  In particular, the
   maximum number of packets that can be sent without acknowledgment
   needs to be chosen to avoid the creation and the increase of
   congestion to a congested network.  Moreover, the extension should
   not be an opportunity for the current connection to be a vector of an
   amplification attack.  The address validation process, used to
   prevent amplification attacks, SHOULD be considered
   [I-D.ietf-quic-transport].

   The safety guidelines are designed to guarantee that the server does
   not add congestion to a congested network.  The following mechanisms
   should help in fulfilling this objective:





Kuhn, et al.            Expires October 25, 2021                [Page 7]

Internet-Draft             Transport for 0-RTT                April 2021


   o  The server SHOULD compare the measured transport parameters of the
      0-RTT connection with those of the 1-RTT connection;

   o  The server MUST NOT send more than a recommended maximum initial
      window in the first transmission of data.  This value could be
      based on [TMA18].

   The following mechanisms consider that the process described in
   Section 4, and that both the server and the client know the
   previously measured BDP.  This is in-line with the safety guidelines:

   o  Exploit a standard IW:

      1.  0-RTT connection: the server sends the first data packet using
          a standard initial window - this can be considered a safe
          starting point for an unknown path, which avoids adding
          congestion to a congested network;

      2.  0-RTT connection: if the reception of IW is confirmed for the
          first RTT of data, and also the path is determined to be
          similar to that of a recent previous session (e.g., similar
          RTT), the method permits the sender to use the previous path
          information as an input to help determine a new safe rate;

      3.  Further safety could be provided by pacing the packets as a
          function of the estimated RTT.

   o  Identify a relevant pacing rhythm:

      1.  0-RTT connection: the servers estimates the pacing rhythm
          using the previously measured BDP - the interpacket
          transmission time is determined by the minimum between (1) the
          ratio between the current maximum message size (MSS) used for
          packets and the bottleneck throughput (2) a tunable safety
          margin that avoids sending more than a recommended maximum
          initial window;

      2.  0-RTT connection: the servers estimates an IW based on the
          pacing rhythms and the RTT;

      3.  0-RTT connection: when the estimated IW is acknowledged, the
          server falls back to a standard slow-start mechanism.

   This follows the idea of [RFC4782],
   [I-D.irtf-iccrg-sallantin-initial-spreading] and [CONEXT15].






Kuhn, et al.            Expires October 25, 2021                [Page 8]

Internet-Draft             Transport for 0-RTT                April 2021


6.  Discussion

6.1.  BDP extension protected as much as initial_max_data

   The BDP metadata parameters are measured by the server during a
   previous connection.  The BDP extension is protected by the mechanism
   that protects the exchange of the 0-RTT transport parameters.  For
   version 1 of QUIC, the BDP extension is protected using the mechanism
   that already protects the "initial_max_data" parameter.  This is
   defined in sections 4.5 to 4.7 of [I-D.ietf-quic-tls].  This provides
   the server with a way to verify that the parameters proposed by the
   client are the same as those that the server sent to the client
   during the previous connection.

6.2.  The client point-of-view

   The client can read the values of the extension.  The client may wish
   to: reject the extension; to accept and adapt the resource and flow
   control parameters; or adapt its requests.  The client cannot change
   the values of the extension.

   Clients MUST NOT send a BDP frame if the extension_lifetime has
   expired.

6.3.  Other use-cases

6.3.1.  Optimizing client's requests

   In a case with Dynamic Adaptive Streaming over HTTPS (DASH), clients
   might encounter issues in knowing the available path capacity or DASH
   can encounter issues in reaching the best available video playback
   quality.  The client requests could then be adapted and specific
   traffic could utilize information from the path characteristics (such
   as encouraging the client to increase the quality of video chunks, to
   fill the buffers and avoid video blocking or to send high quality
   adds).

   In other cases, applications may provide additional services if
   clients can know the server's estimation of the path characteristics.

6.3.2.  Sharing transport information across multiple connections

   There can be benefit in sharing transport information across multiple
   connections.  [I-D.ietf-tcpm-2140bis] considers the sharing of
   transport parameters between connections originating from the same
   host.  The proposal in this document has the advantage of storing
   server-generated information at the client and not requiring the
   server to retain additional state for each client.



Kuhn, et al.            Expires October 25, 2021                [Page 9]

Internet-Draft             Transport for 0-RTT                April 2021


7.  Acknowledgments

   The authors would like to thank Gabriel Montenegro, Patrick McManus,
   Ian Swett, Igor Lubashev, Christian Huitema, Robin Marx, Roland Bless
   and Franklin Simo for their fruitful comments on earlier versions of
   this document.

8.  IANA Considerations

   TBD: Text is required to register the BDP frame and the enable_bdp
   transport parameter.  Parameters are registered using the procedure
   defined in [I-D.ietf-quic-transport].

9.  Security Considerations

   Security considerations are discussed in Section 6 and in
   Section 5.2.

10.  References

10.1.  Normative References

   [I-D.ietf-quic-recovery]
              Iyengar, J. and I. Swett, "QUIC Loss Detection and
              Congestion Control", draft-ietf-quic-recovery-34 (work in
              progress), January 2021.

   [I-D.ietf-quic-tls]
              Thomson, M. and S. Turner, "Using TLS to Secure QUIC",
              draft-ietf-quic-tls-34 (work in progress), January 2021.

   [I-D.ietf-quic-transport]
              Iyengar, J. and M. Thomson, "QUIC: A UDP-Based Multiplexed
              and Secure Transport", draft-ietf-quic-transport-34 (work
              in progress), January 2021.

   [I-D.ietf-tcpm-2140bis]
              Touch, J., Welzl, M., and S. Islam, "TCP Control Block
              Interdependence", draft-ietf-tcpm-2140bis-07 (work in
              progress), December 2020.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.






Kuhn, et al.            Expires October 25, 2021               [Page 10]

Internet-Draft             Transport for 0-RTT                April 2021


   [RFC4782]  Floyd, S., Allman, M., Jain, A., and P. Sarolahti, "Quick-
              Start for TCP and IP", RFC 4782, DOI 10.17487/RFC4782,
              January 2007, <https://www.rfc-editor.org/info/rfc4782>.

   [RFC6349]  Constantine, B., Forget, G., Geib, R., and R. Schrage,
              "Framework for TCP Throughput Testing", RFC 6349,
              DOI 10.17487/RFC6349, August 2011,
              <https://www.rfc-editor.org/info/rfc6349>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

10.2.  Informative References

   [CONEXT15]
              Li, Q., Dong, M., and P. Godfrey, "Halfback: Running Short
              Flows Quickly and Safely", ACM CoNEXT , 2015.

   [I-D.irtf-iccrg-sallantin-initial-spreading]
              Sallantin, R., Baudoin, C., Arnal, F., Dubois, E., Chaput,
              E., and A. Beylot, "Safe increase of the TCP's Initial
              Window Using Initial Spreading", draft-irtf-iccrg-
              sallantin-initial-spreading-00 (work in progress), January
              2014.

   [TMA18]    Ruth, J. and O. Hohlfeld, "Demystifying TCP Initial Window
              Configurations of Content Distribution Networks", 2018
              Network Traffic Measurement and Analysis Conference
              (TMA) , 2018.

Appendix A.  Example

   TBD

Authors' Addresses

   Nicolas Kuhn
   CNES

   Email: nicolas.kuhn@cnes.fr






Kuhn, et al.            Expires October 25, 2021               [Page 11]

Internet-Draft             Transport for 0-RTT                April 2021


   Emile Stephan
   Orange

   Email: emile.stephan@orange.com


   Gorry Fairhurst
   University of Aberdeen

   Email: gorry@erg.abdn.ac.uk


   Tom Jones
   University of Aberdeen

   Email: tom@erg.abdn.ac.uk



































Kuhn, et al.            Expires October 25, 2021               [Page 12]
