<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="info" docName="draft-kuhn-quic-0rtt-bdp-09" ipr="trust200902">
	<!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

	<!-- ***** FRONT MATTER ***** -->

	<front>
		<!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

		<title abbrev="Transport for 0-RTT">Transport parameters for 0-RTT connections</title>

		<author fullname="Nicolas Kuhn" initials="N" surname="Kuhn">
			<organization>CNES</organization>
			<address>
				<email>nicolas.kuhn@cnes.fr</email>
			</address>
		</author>

		<author fullname="Emile Stephan" initials="E" surname="Stephan">
			<organization>Orange</organization>
			<address>
				<email>emile.stephan@orange.com</email>
			</address>
		</author>

		<author fullname="Gorry Fairhurst" initials="G" surname="Fairhurst">
			<organization>University of Aberdeen</organization>
			<address>
				<email>gorry@erg.abdn.ac.uk</email>
			</address>
		</author>
	
		<author fullname="Tom Jones" initials="T" surname="Jones">
			<organization>University of Aberdeen</organization>
			<address>
				<email>tom@erg.abdn.ac.uk</email>
			</address>
		</author>

		<author fullname="Christian Huitema" initials="C" surname="Huitema">
			<organization>Private Octopus Inc.</organization>
			<address>
				<email>huitema@huitema.net</email>
			</address>
		</author>

		<date year="2021"/>

		<!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
	 in the current day and month for you. If the year is not the current one, it is
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to
	 specify just the year. -->

		<!-- Meta-data Declarations -->

		<area>Transport</area>

		<workgroup>Internet Engineering Task Force</workgroup>

		<!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

		<keyword>QUIC, high BDP, Transport, 0-RTT, early_data</keyword>

		<!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

	<abstract>
		<t>
		QUIC 0-RTT transport features currently
		focuses on egress traffic optimization. This draft proposes a QUIC extension
		that improves the performance of ingress traffic. 
		</t>
	</abstract>
	</front>

	<middle>

		<section anchor="sec:introduction" title="Introduction">
		<t>
		QUIC 0-RTT transport features currently
		focuses on egress traffic optimization. This draft proposes a QUIC extension
		to improve the performance of ingress traffic. 
		</t>
		
		<t>When clients resume a session to download a large document the congestion algorithms will require time to ramp up the packet rate. This document improves traffic delivery by allowing the connection to short-cut slow RTT-based processes by remembering previously used connection parameters. Candidate parameters are Round-Trip Time (RTT) and network Bottleneck Bandwidth (BB).</t>

			<t>Previously stored parameters may not be relevant: (1) network conditions may change and using a previously estimated BB may cause congestion; (2) the client may convince a server to use a CWIN much larger than required.</t>

			<t>This document proposes safety guidelines on how to safely apply previously measured parameters to new connections along with security considerations. This applies to resumed sessions, whether 0-RTT approach is exploited or not. The document discusses implementation experience in QUIC.</t>
			<t><xref target="subsec:rationale_jump"></xref> discusses solutions that can enable a safe increase of the transmission rate. These safety protections SHOULD be implemented when the transport parameters are used to increase the ingress initial transmission rate. <xref target="sec:implem"></xref> discusses ways of implementing this in QUIC.</t>

		<section anchor="sec:terms_def" title="Notations and terms">
	
			<t><xref target="RFC6349"></xref> defines the BDP as follows: "Derived from Round-Trip Time (RTT) and network Bottleneck Bandwidth (BB), the Bandwidth-Delay Product (BDP) determines the Send and Received Socket buffer sizes required to achieve the maximum TCP Throughput." A QUIC connection may not reproduce exactly the procedure detailed in <xref target="RFC6349"></xref> to measure the BDP. The server may exploit internal evaluations of the bytes in flight and minimum RTT to assess the BDP. This draft considers the BDP as the Bandwidth-Delay Product as estimated by the server and would include the buffering in the network.</t>

		</section>

		<section anchor="sec:req_language" title="Requirements Language">
			<t>The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"></xref><xref target="RFC8174"></xref> when, and only when, they appear in all  capitals, as shown here.</t>
		</section>
		</section>

			
		<!--		<section anchor="subsec:scope" title="Scope and structure of the document">

			<t> The following scenario is considered through the whole document:<list style="numbers">
				<t>Sharing 1-RTT transport parameters for 0-RTT connections : <xref target="sec:implem"></xref> discusses ways of implementing this in QUIC.</t>
				<t>Safely using previously measured transport parameters in 0-RTT connections: <xref target="subsec:rationale_jump"></xref> discusses solutions that can enable a safe increase of the transmission rate. These safety nets SHOULD be implemented when the transport parameters are used to increase the ingress initial transmission rate.</t>
			</list></t>
		-->
			<!--
			<t>The following design can result in the exploitation of the solution proposed in <xref target="sec:implem"></xref> and <xref target="subsec:rationale_jump"></xref>:<list style="symbols">
					<t>Sharing 1-RTT transport parameters for 0-RTT connections:<list style="numbers">
						<t>1-RTT connection without 0-RTT: the server stores parameters related to round-trip time and maximum data rate;</t>
						<t>During the 1-RTT connection: the server sends the BDP extension frames (containing round-trip time and maximum data-rate) to the client;</t>
						<t>0-RTT connection: if the client agrees with the parameters of the BDP extension, it sends the BDP extension along with 0-RTT CHO packets;</t>
						<t>0-RTT connection: the server checks the authenticity and validity of the received BDP extension and run address validation for future connection described in Section 8.1.3 of <xref target="I-D.ietf-quic-transport"></xref>.</t>
					</list></t>
					<t>Safely using previously measured transport parameters in 0-RTT connections:<list style="numbers">
				<t>0-RTT connection: the server sends the first data packet using a standard initial window;</t>
				<t>0-RTT connection: if the reception of IW is
					exhibits characteristics 
					similar to that of a recent previous
					session from the client (i.e., similar RTT), the method
					permits the sender to use the previous
					path information as an input to help
					determine a new safe rate;</t>
							<t>Pacing of
					packets as a function of the estimated
							RTT
					could provide additional safety.</t>
					</list></t>
			</list></t>
		</section> 
			-->

		<section anchor="subsec:rationale_jump" title="Safe jump start">

			<section title="Rationale behind the safety guidelines">

				<t>The server should carefully exploit internal evaluations of the bytes in flight and minimum RTT to assess the BDP. Indeed, the bytes in flight parameter that could be recalled from previous connection may be higher than the number of bytes in the BDP such as defined in <xref target="RFC6349"></xref> since it may include bytes in buffers along the path.</t>
				<t>Previously measured BDP should not be used as-is to avoid congestion collapse: <list style="symbols">
					<t>Rationale #1: Network conditions may vary between 2 consecutive connections.</t>
					<t>Rationale #2: Information sent by a malicious client may not be relevant since they may try to convince servers in using CWIN higher than required which may induce congestion.</t>
					</list></t>
				<t>While safety recommendations are necessary, it seems important to note that CDNs currently exploit a very high Initial Window <xref target="TMA18"></xref>.</t>

			</section> 
	
			<section title="Rationale #1: Variable network conditions">
				<t>The server MUST check the validity of the BDP parameters whether they are sent by a client or stored at the server. Indeed, the following events could make use of the BDP parameters inappropriate:<list style="symbols">
<t>IP address changes: If the client changes its IP address, it may employ a different network to reconnect. The new path may not exhibit the same characteristics as the old one.</t>
	<!-- <t>Rate-limitation induced by QUIC: The proposed mechanisms SHOULD be limited by other rate-limitation mechanisms of QUIC, such as the address validation process that is used to prevent amplification attacks <xref target="I-D.ietf-quic-transport"></xref>.</t> -->
	<t>Lifetime of the extension: If the network conditions change, e.g. the network was not congested when BDP parameters were evaluated but there is congestion for the next connection, the previously estimated parameters may not be valid.</t>
				</list></t>

					<t>There are different solutions for the variable network conditions:<list style="symbols">
							<t>Rationale #1 - Solution #1 : Directly exploit the BDP parameters estimated from a previous connection.</t>
							<t>Rationale #1 - Solution #2 : Implement a safety check to measure whether the remembered BDP parameters are relevant or if using them would not cause congestion in a congested betwork. </t>
					</list></t>
				<t><xref target="sec:safety_guide"></xref> describes various approaches for the Rationale #1 - Solution #2.</t>
		</section>

			<section title="Rationale #2: Malicious clients">
				<t>The server MUST check the integrity of the BDP parameters received by a client.</t>

					<t>There are different solutions for malicious clients:<list style="symbols">
						<t>Rationale #2 - Solution #1 : The server stores a local estimation of the BDP parameters.</t> 
						<t>Rationale #2 - Solution #2 : The server sends the estimation of the BDP parameters to the client. The information is encrypted by the server. The client resends the information when resuming a connection. The client can neither read nor modify the BDP parameters.</t>
						<t>Rationale #2 - Solution #3 : The server sends the estimation of the BDP parameters to the client. The information includes an integrity protection. The client resends the information when resuming a connection. The client can read but can not modify the BDP parameters.</t>
					</list></t>
					<t><xref target="sec:implem"></xref> describes various implementation approaches for each of these solutions using local storage (<xref target="sec:local_storage"></xref> for Rationale #2 - Solution #1), NEW_TOKEN Frame (<xref target="sec:using_new_token"></xref> for Rationale #2 - Solution #2), BDP extension frame (<xref target="sec:bdp_frame_section"></xref> for Rationale #2 - Solution #3).</t>

		</section>

		<section anchor="sec:discuss_bdp_default" title="Trade-off between the different solutions">
			<t>This section proposes a discussion on the advantages and drawbacks of the different implementation options that are described in this section. While there are some discussions for the solutions regarding the Rationale #2, the server MUST consider the Rationale #1 - Solution #2 and avoid the Rationale #1 - Solution #1: the server MUST implement a safety check to measure whether the remembered BDP parameters are relevant or if using them would not cause congestion in a congested betwork.</t> 
			<section title="Security aspects">
				<t>The client may send information related to the BDP to the server with the BDP Frame extension using either Rationale #2 - Solution #2 or Rationale #2 - Solution #3. However, the server may not trust the client. Indeed, even if 0-RTT packets containing the BDP Frame are encrypted, a client may modify the values within the extension and encrypt the 0-RTT packet. Authentification mechanisms may not guarantee that the values are safe. The server may then need to store the BDP parameters as well.</t>
				<t>A malicious client may modify the BDP parameters to convince the server to use a CWIN much larger than required. Using the algorithms proposed in <xref target="sec:safety_guide"></xref>, the server may reduce any intended harm. A supplementary check could be not to accept to use values that would be higher than those currently used by CDNs <xref target="TMA18"></xref>. Anyway, storing the BDP parameters locally at the server reduces the risks associated by allowing the client to transmit information related to the BDP of the network.</t>
			</section>

			<section title="Interoperability and use-cases">
				<t>If the server ends up storing a resumption ticket for each client to protect against replay on a third party IP, it may as well store the IP address and BDP parameters of the client. In cases where the BDP Frame extension is exploited, the approach of storing the BDP parameters locally at the server can be used for cross-checking the BDP parameters sent by a client. Anyway the server could enable safe jump start but without the BDP Frame extension, the client does not have the choice of accepting it or not.</t>
				<t>While storing locally values related to the BDP would help in improving the ingress for 0-RTT connections, not using a BDP Frame extension may reduce the interest of the approach where (1) the client knows the BDP estimations done at the server, (2) the client decides to accept or reject ingress optimization, (3) the client tunes application level requests.</t>
			</section>

			<section title="Summary">
				<t>As a summary, the approach of local storage of values is more secure and the BDP Frame extension provides more information to the client and more interoperability. The <xref target="fig:summary"></xref> provides a summary of the advantages and drawbacks of each approach. </t>

	<figure anchor="fig:summary" title="Comparing solutions">
        <artwork>
+---------+-----------+----------------+---------------+-----------+
|Rationale| Solution  |    Advantage   |    Drawback   |  Comment  |
+---------+-----------+----------------+---------------+-----------+
|#1       |#1         |                |               |           |
|Variable |Directly   |Ingress optim.  |Risks of adding|MUST NOT   | 
|Network  |exploit BDP|                | congestion    |implement  |	
|         +-----------+----------------+---------------+-----------+
|         |#2         |                |               |           |
|         |Implement  |Reduce risks of |Negative impact|MUST       |
|         |safety     | adding         | on ingress    |implement  |
|         |check      | congestion     | optimi.       |Section 3  |
+---------+-----------+----------------+---------------+-----------+
|#2       |#1         |                |               |           |
|Malicious|Local      |Enforced        |Client can not |	   |
|client   |storage    | security       | decide to     |           |
|         |           |                | reject        |           |
|         |           |                |Limited        |           |
|         |           |                | use-cases     |Section 4.2|
|         +-----------+----------------+---------------+-----------+
|         |#2         |                |               |           |
|         |NEW_TOKEN  |Save resource   |Malicious      |           |
|         |           | at server      | client may    |           |
|         |           |Opaque token    | change token  |           |
|         |           | protected      | even if       |           |
|         |           |                | protected     |           |
|         |           |                |Server may     |           |
|         |           |                | not trust     |           |
|         |           |                | client        |Section 4.3|
|         +-----------+----------------+---------------+-----------+
|         |#3         |                |               |           |
|         |BDP        |Extended        |Malicious      |	   |
|         |extension  | use-cases      | client may    |           |
|         |           |Client can      | change BDP    |           |
|         |           | read and decide| even if       |           |
|         |           | to reject      | protected     |           |
|         |           |BDP extension   |Server may     |           |
|         |           | protected      | not trust     |           |
|         |           |                | client        |Section 4.4|
+---------+-----------+----------------+---------------+-----------+
	</artwork>
        </figure>

		</section>
		</section>
			</section>

<section anchor="sec:safety_guide" title="Safety guidelines"> 
	
<t>The safety guidelines are designed to guarantee that the server does not add congestion to a congested network. The following mechanisms should help in fulfilling this objective:<list style="symbols">
	<t>The server SHOULD compare the measured transport parameters of the 0-RTT connection with those of the 1-RTT connection;</t>
	<t>The server MUST NOT send more than a recommended maximum initial window in the first transmission of data. This value could be based on <xref target="TMA18"></xref>.</t>
</list></t>

<t>The proposed mechanisms SHOULD be limited by any rate-limitation mechanisms of QUIC, such as flow control mechanisms or amplification attacks prevention. In particular, the maximum number of packets that can be sent without acknowledgment needs to be chosen to avoid the creation and the increase of congestion to a congested network. Moreover, the extension should not be an opportunity for the current connection to be a vector of an amplification attack. The address validation process, used to prevent amplification attacks, SHOULD be considered <xref target="I-D.ietf-quic-transport"></xref>.</t>


<t>The following mechanisms could be implemented:<list style="symbols">
	<t>Exploit a standard IW:<list style="numbers">
                                <t>The server sends the first data packet using a standard initial window - this can be considered a safe starting point for an unknown path, which avoids adding congestion to a congested network;</t>
                                <t>If the reception of IW is
                                        confirmed for the first RTT of data,
                                        and also the path is determined to be
                                        similar to that of a recent previous
                                        session (e.g., similar RTT), the method
                                        permits the sender to use the previous
                                        path information as an input to help
                                        determine a new safe rate;</t>
                                                        <t>Further
                                        safety could be provided by pacing the
                                        packets as a function of the estimated
                                                        RTT.</t>
			</list></t>
	<t>Identify a relevant pacing rhythm:<list style="numbers">
                                <t>The server estimates the pacing rhythm using the previously measured BDP - the interpacket transmission time is determined by the minimum between (1) the ratio between the current maximum message size (MSS) used for packets and the bottleneck throughput (2) a tunable safety margin that avoids sending more than a recommended maximum initial window;</t>
				<t>The server estimates an IW based on the pacing rhythms and the RTT;</t>
				<t>When the estimated IW is acknowledged, the server falls back to a standard slow-start mechanism.</t>
			</list></t>
</list></t>

				<t>This follows the idea of <xref target="RFC4782"></xref>, <xref target="I-D.irtf-iccrg-sallantin-initial-spreading"></xref> and <xref target="CONEXT15"></xref>.</t>
				</section>

		<section anchor="sec:implem" title="Implementation considerations">
			<section anchor="sec:bdp_frame" title="Rationale behind the different implementation options">		
				<t>Using NewSessionTickets messages of TLS is a solution that could have been envisionned. The idea would be to add a 'bdp_metada' field in the NewSessionTickets that the client could read. The sole extension currently defined in TLS1.3 that can be seen by the client is max_early_data_size (see section 4.6.1 of <xref target="RFC8446"></xref>). However, in the general design of QUIC, TLS sessions are managed by the TLS stacks.</t>

				<t>This draft presents three distinct approaches: sending an opaque blob to the client that it may retransmit for future connection (see <xref target="sec:using_new_token"></xref>), enable a local storage of BDP related values (see <xref target="sec:local_storage"></xref>) and a BDP Frame extension (see <xref target="sec:bdp_frame_section"></xref>).</t>
		</section>

		<section anchor="sec:local_storage" title="Independent local storage of values">
				<t>This approach lets both client and server remember their BDP parameters independently:<list style="symbols">
	<t>During a 1RTT session, the client stores the client side RTT and CWIN together with the session resume ticket obtained from the server. The client also store the IP address of the server.</t>
	<t>The server maintains a table of previously issued tickets, indexed by the same random ticket identifier that is used to guarantee uniqueness of the AEAD encryption. Old tokens are removed from the table using LRU logic. For each ticket identifier, the table holds the RTT and CWIN, and also the IP address of the client.</t>
	</list></t>

	<t>During the 0-RTT session, the nodes wait for the first RTT measurement from the peer's IP address to verify that the parameters have not changed. If the RTT matches expectation, the CWIN is set to the remembered value.</t>
		</section>
			
		<section anchor="sec:using_new_token" title="Using NEW_TOKEN frames">
				<t>Using NEW_TOKEN frames, the server could send a token to the client through a NEW_TOKEN frame. The token is an opaque blob and the client can not read its content (see section 19.7 of <xref target="I-D.ietf-quic-transport"></xref>). The client sends the received token in the header of an Initial packet for future connection.</t>
		</section>
	
			<section anchor="sec:bdp_frame_section" title="BDP Frame">

				<t>This section proposes the exploitation of a new frame, BDP frame. The BDP frame MUST be contained in 0-RTT packets if sent by the client. The BDP frame MUST be contained in 1-RTT packets if sent by the server. The BDP frame MUST be considered in the congestion control and its data may not be limited by flow control limits. The server MAY send multiple BDP frames in both 1-RTT and 0-RTT connections. The client MUST NOT send BDP frames during 1-RTT connections.</t>
       
				<section anchor="sec:bdp_metadata" title="BDP Frame Format">
				<t>The BDP frames are formatted as shown in <xref target="fig:bdp_frame_format"></xref>.</t>
	<figure anchor="fig:bdp_frame_format" title="BDP Frame Format">
        <artwork>
BDP Frame {
  Type (i) = 0xXXX,
  Lifetime (i),
  Reconnection Bytes In Flight (i),
  Reconnection Minimum RTT (i),
}
        </artwork>
        </figure>
				<t>The BDP frames contain the following fields: <list style="symbols">

				<t>Lifetime (extension_lifetime): The extension_lifetime is a value in milliseconds that is encoded as a variable length integer. This follows the idea of NewSessionTicket of TLS <xref target="RFC8446"></xref>. This represents the validity in time of the extension.</t> 

				<t>Reconnection Bytes in Flight (recon_bytes_in_flight): The recon_bytes_in_flight is a value in bytes that is encoded as a variable length integer. The bytes in
				flight measured on the previous connection by
				the server.
				Using the previous values of bytes_in_flight defined in <xref
				target="I-D.ietf-quic-recovery"></xref>,
					recon_bytes_in_flight could be determined.</t>

				<t>Reconnection Minimum RTT (recon_min_rtt): The recon_min_rtt is a value in milliseconds that is encoded as a variable length integer. 
				Using
				the min_rtt defined in <xref
				target="I-D.ietf-quic-recovery"></xref>,
				recon_min_rtt can be set to min_rtt. The min_rtt 
				parameter may not track a decreasing RTT: the 
				min_rtt that is reported here may not be the 
				actual minimum RTT measured during the 1-RTT 
				connection, but still reflects the characteristics 
				of the latency on the network.
				</t>

			</list></t>

		</section>

		<section anchor="sec:bdp_activation" title="Extension activation">
			<t>The client can accept the transmission of BDP frames from the server by using the following enable_bdp transport extension.</t>
			<t>enable_bdp (0xTBD): in the 1-RTT connection, the client indicates to the server that it wishes to receive BDP extension frames for improving ingress of 0-RTT connection. Default value is 0. Values strictly above 3 are invalid, and receipt of these values MUST be treated as a connection error of type TRANSPORT_PARAMETER_ERROR.</t>
			<t><list style="symbols">
					<t>0: Default value. If the client does not send this parameter, the server considers that the client does not support or does not wish to activate the BDP extension.</t>
					<t>1: The client indicates to the server that it wishes to receive BDP frame and activates the ingress optimization for the 0-RTT connection.</t>
					<t>2: The client indicates that it does not wish to receive BDP frames but activates ingress optimization.</t>
					<t>3: The client indicates that it wishes to receive BDP frames but does not activate ingress optimization.</t>
			</list></t>
		<t>This Transport Parameter is encoded as per Section 18 of <xref target="I-D.ietf-quic-transport"></xref>.</t>

		</section>

		</section>
		</section>

		<section anchor="sec:discuss" title="Discussion">


			<section anchor="subsec:other_param_bdp_protect" title="BDP extension protected as much as initial_max_data">
				<t>The BDP metadata parameters are measured by
					the server during a previous
					connection. The BDP extension is
					protected by the mechanism that
					protects the exchange of the 0-RTT
					transport parameters. For version 1
					of QUIC, the BDP extension is protected
					using the mechanism that already
					protects the "initial_max_data"
					parameter.  This is defined in sections
					4.5 to 4.7 of <xref
						target="I-D.ietf-quic-tls"></xref>.
					This provides the server with a way to
					verify that the parameters proposed by the
					client are the same as those that the server sent
					to the client during the previous
					connection.</t>
			</section>

			<!--
			<section anchor="subsec:other_param_client_pov" title="The client point-of-view">
				<t>The client can read the values of the 
					extension. The client may wish to:
					reject the extension; to accept and
					adapt the resource and flow control
					parameters; or adapt its requests. The
					client cannot change the values of the
					extension.</t>
				<t>Clients MUST NOT send a BDP frame if the extension_lifetime has expired.</t>
			</section>
			--> 

			<section anchor="sec:rationale" title="Other use-cases">
	
			<section anchor="subsec:rationale_client" title="Optimizing client's requests">
				<t>In a case with Dynamic Adaptive Streaming over HTTPS (DASH), clients might encounter issues in knowing the available path capacity or DASH can encounter issues in reaching the best available video playback quality. The client requests could then be adapted and specific traffic could utilize information from the path characteristics (such as encouraging the client to increase the quality of video chunks, to fill the buffers and avoid video blocking or to send high quality adds).</t>
				<t>In other cases, applications may provide additional services if clients can know the server's estimation of the path characteristics.</t>
		</section>

		<section anchor="subsec:rationale_sharing" title="Sharing transport information across multiple connections">
				<t>There can be benefit in sharing transport
				information across multiple
				connections. <xref
					target="I-D.ietf-tcpm-2140bis"></xref>
				considers the sharing of transport
				parameters between connections
				originating from the same host. The
				proposal in this document has the
				advantage of storing server-generated information at
				the client and not requiring the server
				to retain additional state for each
				client.</t>
		</section>
		</section>

			</section>
		
		<section anchor="sec:acknowledgments" title="Acknowledgments">
			<t>The authors would like to thank Gabriel Montenegro, Patrick McManus, Ian Swett, Igor Lubashev, Robin Marx, Roland Bless and Franklin Simo for their fruitful comments on earlier versions of this document.</t>
		</section>

		<section anchor="sec:IANA" title="IANA Considerations">
			<t>TBD: Text is required to register the BDP frame and the enable_bdp transport parameter. Parameters are registered using the procedure defined in <xref target="I-D.ietf-quic-transport"></xref>.</t>
		</section>

		<section anchor="sec:security" title="Security Considerations">
			<t>Security considerations are discussed in <xref target="sec:discuss"></xref> and in <xref target="sec:safety_guide"></xref>.</t>
		</section>
	</middle>

	<!--  *****BACK MATTER ***** -->
	<back>
		<!-- References split into informative and normative -->
		<!-- There are 2 ways to insert reference entries from the citation libraries:
	1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
	2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
	(for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")
	Both are cited textually in the same manner: by using xref elements.
	If you use the PI option, xml2rfc will, by default, try to find included files in the same
	directory as the including file. You can also define the XML_LIBRARY environment variable
	with a value containing a set of directories to search.  These can be either in the local
	filing system or remote ones accessed by http (http://domain/dir/... ).-->

		<references title="Normative References">		
			<?rfc include="reference.RFC.2119.xml"?>
			<?rfc include="reference.RFC.4782.xml"?>
			<?rfc include="reference.RFC.6349.xml"?>
			<?rfc include="reference.RFC.8174.xml"?>
			<?rfc include="reference.RFC.8446.xml"?>
			<?rfc include="reference.I-D.ietf-tcpm-2140bis.xml"?>
			<?rfc include="reference.I-D.ietf-quic-tls.xml"?>
			<?rfc include="reference.I-D.ietf-quic-transport.xml"?>
			<?rfc include="reference.I-D.ietf-quic-recovery.xml"?>
		</references>
			
		<references title="Informative References">
		
			<?rfc include="reference.I-D.irtf-iccrg-sallantin-initial-spreading.xml"?>
			<reference anchor="TMA18">
				<front>
					<title>Demystifying TCP Initial Window Configurations of Content Distribution Networks</title>
					<author initials="J" surname="Ruth">
					</author>
					<author initials="O" surname="Hohlfeld">
					</author>
					<date year="2018"/>
				</front>
				<seriesInfo name="2018 Network Traffic Measurement and Analysis Conference (TMA)" value=""/>
			</reference>
			<reference anchor="CONEXT15">
				<front>
					<title>Halfback: Running Short Flows Quickly and Safely</title>
					<author initials="Q" surname="Li">
					</author>
					<author initials="M" surname="Dong">
					</author>
					<author initials="P B" surname="Godfrey">
					</author>
					<date year="2015"/>
				</front>
				<seriesInfo name="ACM CoNEXT" value=""/>
			</reference>
		</references>
		<section anchor="appendix-numerical" title="Example">
			<t> TBD </t>
		</section>
	</back>
</rfc>
